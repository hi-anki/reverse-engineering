
hello_elf:     file format elf64-x86-64


Disassembly of section .note.gnu.property:

0000000000000350 <.note.gnu.property>:
 350:	04 00                	add    al,0x0
 352:	00 00                	add    BYTE PTR [rax],al
 354:	10 00                	adc    BYTE PTR [rax],al
 356:	00 00                	add    BYTE PTR [rax],al
 358:	05 00 00 00 47       	add    eax,0x47000000
 35d:	4e 55                	rex.WRX push rbp
 35f:	00 02                	add    BYTE PTR [rdx],al
 361:	80 00 c0             	add    BYTE PTR [rax],0xc0
 364:	04 00                	add    al,0x0
 366:	00 00                	add    BYTE PTR [rax],al
 368:	01 00                	add    DWORD PTR [rax],eax
 36a:	00 00                	add    BYTE PTR [rax],al
 36c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000370 <.note.gnu.build-id>:
 370:	04 00                	add    al,0x0
 372:	00 00                	add    BYTE PTR [rax],al
 374:	14 00                	adc    al,0x0
 376:	00 00                	add    BYTE PTR [rax],al
 378:	03 00                	add    eax,DWORD PTR [rax]
 37a:	00 00                	add    BYTE PTR [rax],al
 37c:	47                   	rex.RXB
 37d:	4e 55                	rex.WRX push rbp
 37f:	00 df                	add    bh,bl
 381:	17                   	(bad)
 382:	f3 77 0b             	repz ja 390 <_init-0xc70>
 385:	c0 42 85 7d          	rol    BYTE PTR [rdx-0x7b],0x7d
 389:	4c 6f                	rex.WR outs dx,DWORD PTR ds:[rsi]
 38b:	41 7e b1             	rex.B jle 33f <_init-0xcc1>
 38e:	b2 b4                	mov    dl,0xb4
 390:	cc                   	int3
 391:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 392:	47 c9                	rex.RXB leave

Disassembly of section .interp:

0000000000000394 <.interp>:
 394:	2f                   	(bad)
 395:	6c                   	ins    BYTE PTR es:[rdi],dx
 396:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 39d:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 3a2:	78 2d                	js     3d1 <_init-0xc2f>
 3a4:	78 38                	js     3de <_init-0xc22>
 3a6:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 3ac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3ad:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .gnu.hash:

00000000000003b0 <.gnu.hash>:
 3b0:	02 00                	add    al,BYTE PTR [rax]
 3b2:	00 00                	add    BYTE PTR [rax],al
 3b4:	06                   	(bad)
 3b5:	00 00                	add    BYTE PTR [rax],al
 3b7:	00 01                	add    BYTE PTR [rcx],al
 3b9:	00 00                	add    BYTE PTR [rax],al
 3bb:	00 06                	add    BYTE PTR [rsi],al
 3bd:	00 00                	add    BYTE PTR [rax],al
 3bf:	00 00                	add    BYTE PTR [rax],al
 3c1:	00 81 00 00 00 00    	add    BYTE PTR [rcx+0x0],al
 3c7:	00 06                	add    BYTE PTR [rsi],al
 3c9:	00 00                	add    BYTE PTR [rax],al
 3cb:	00 00                	add    BYTE PTR [rax],al
 3cd:	00 00                	add    BYTE PTR [rax],al
 3cf:	00 d1                	add    cl,dl
 3d1:	65 ce                	gs (bad)
 3d3:	6d                   	ins    DWORD PTR es:[rdi],dx

Disassembly of section .dynsym:

00000000000003d8 <.dynsym>:
	...
 3f0:	06                   	(bad)
 3f1:	00 00                	add    BYTE PTR [rax],al
 3f3:	00 12                	add    BYTE PTR [rdx],dl
	...
 405:	00 00                	add    BYTE PTR [rax],al
 407:	00 48 00             	add    BYTE PTR [rax+0x0],cl
 40a:	00 00                	add    BYTE PTR [rax],al
 40c:	20 00                	and    BYTE PTR [rax],al
	...
 41e:	00 00                	add    BYTE PTR [rax],al
 420:	01 00                	add    DWORD PTR [rax],eax
 422:	00 00                	add    BYTE PTR [rax],al
 424:	12 00                	adc    al,BYTE PTR [rax]
	...
 436:	00 00                	add    BYTE PTR [rax],al
 438:	64 00 00             	add    BYTE PTR fs:[rax],al
 43b:	00 20                	add    BYTE PTR [rax],ah
	...
 44d:	00 00                	add    BYTE PTR [rax],al
 44f:	00 73 00             	add    BYTE PTR [rbx+0x0],dh
 452:	00 00                	add    BYTE PTR [rax],al
 454:	20 00                	and    BYTE PTR [rax],al
	...
 466:	00 00                	add    BYTE PTR [rax],al
 468:	18 00                	sbb    BYTE PTR [rax],al
 46a:	00 00                	add    BYTE PTR [rax],al
 46c:	22 00                	and    al,BYTE PTR [rax]
	...

Disassembly of section .dynstr:

0000000000000480 <.dynstr>:
 480:	00 70 75             	add    BYTE PTR [rax+0x75],dh
 483:	74 73                	je     4f8 <_init-0xb08>
 485:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 488:	6c                   	ins    BYTE PTR es:[rdi],dx
 489:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 490:	72 74                	jb     506 <_init-0xafa>
 492:	5f                   	pop    rdi
 493:	6d                   	ins    DWORD PTR es:[rdi],dx
 494:	61                   	(bad)
 495:	69 6e 00 5f 5f 63 78 	imul   ebp,DWORD PTR [rsi+0x0],0x78635f5f
 49c:	61                   	(bad)
 49d:	5f                   	pop    rdi
 49e:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 4a4:	7a 65                	jp     50b <_init-0xaf5>
 4a6:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 4aa:	63 2e                	movsxd ebp,DWORD PTR [rsi]
 4ac:	73 6f                	jae    51d <_init-0xae3>
 4ae:	2e 36 00 47 4c       	cs ss add BYTE PTR [rdi+0x4c],al
 4b3:	49                   	rex.WB
 4b4:	42                   	rex.X
 4b5:	43 5f                	rex.XB pop r15
 4b7:	32 2e                	xor    ch,BYTE PTR [rsi]
 4b9:	32 2e                	xor    ch,BYTE PTR [rsi]
 4bb:	35 00 47 4c 49       	xor    eax,0x494c4700
 4c0:	42                   	rex.X
 4c1:	43 5f                	rex.XB pop r15
 4c3:	32 2e                	xor    ch,BYTE PTR [rsi]
 4c5:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]
 4c8:	5f                   	pop    rdi
 4c9:	49 54                	rex.WB push r12
 4cb:	4d 5f                	rex.WRB pop r15
 4cd:	64 65 72 65          	fs gs jb 536 <_init-0xaca>
 4d1:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 4d8:	4d 
 4d9:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 4db:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 4dc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 4dd:	65 54                	gs push rsp
 4df:	61                   	(bad)
 4e0:	62 6c 65 00 5f       	(bad)
 4e5:	5f                   	pop    rdi
 4e6:	67 6d                	ins    DWORD PTR es:[edi],dx
 4e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 4e9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 4ea:	5f                   	pop    rdi
 4eb:	73 74                	jae    561 <_init-0xa9f>
 4ed:	61                   	(bad)
 4ee:	72 74                	jb     564 <_init-0xa9c>
 4f0:	5f                   	pop    rdi
 4f1:	5f                   	pop    rdi
 4f2:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 4f5:	54                   	push   rsp
 4f6:	4d 5f                	rex.WRB pop r15
 4f8:	72 65                	jb     55f <_init-0xaa1>
 4fa:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 501:	4d 
 502:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 504:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 505:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 506:	65 54                	gs push rsp
 508:	61                   	(bad)
 509:	62                   	.byte 0x62
 50a:	6c                   	ins    BYTE PTR es:[rdi],dx
 50b:	65                   	gs
	...

Disassembly of section .gnu.version:

000000000000050e <.gnu.version>:
 50e:	00 00                	add    BYTE PTR [rax],al
 510:	02 00                	add    al,BYTE PTR [rax]
 512:	01 00                	add    DWORD PTR [rax],eax
 514:	03 00                	add    eax,DWORD PTR [rax]
 516:	01 00                	add    DWORD PTR [rax],eax
 518:	01 00                	add    DWORD PTR [rax],eax
 51a:	03 00                	add    eax,DWORD PTR [rax]

Disassembly of section .gnu.version_r:

0000000000000520 <.gnu.version_r>:
 520:	01 00                	add    DWORD PTR [rax],eax
 522:	02 00                	add    al,BYTE PTR [rax]
 524:	27                   	(bad)
 525:	00 00                	add    BYTE PTR [rax],al
 527:	00 10                	add    BYTE PTR [rax],dl
 529:	00 00                	add    BYTE PTR [rax],al
 52b:	00 00                	add    BYTE PTR [rax],al
 52d:	00 00                	add    BYTE PTR [rax],al
 52f:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
 532:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 538:	31 00                	xor    DWORD PTR [rax],eax
 53a:	00 00                	add    BYTE PTR [rax],al
 53c:	10 00                	adc    BYTE PTR [rax],al
 53e:	00 00                	add    BYTE PTR [rax],al
 540:	b4 91                	mov    ah,0x91
 542:	96                   	xchg   esi,eax
 543:	06                   	(bad)
 544:	00 00                	add    BYTE PTR [rax],al
 546:	02 00                	add    al,BYTE PTR [rax]
 548:	3d 00 00 00 00       	cmp    eax,0x0
 54d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000550 <.rela.dyn>:
 550:	d0 3d 00 00 00 00    	sar    BYTE PTR [rip+0x0],1        # 556 <_init-0xaaa>
 556:	00 00                	add    BYTE PTR [rax],al
 558:	08 00                	or     BYTE PTR [rax],al
 55a:	00 00                	add    BYTE PTR [rax],al
 55c:	00 00                	add    BYTE PTR [rax],al
 55e:	00 00                	add    BYTE PTR [rax],al
 560:	30 11                	xor    BYTE PTR [rcx],dl
 562:	00 00                	add    BYTE PTR [rax],al
 564:	00 00                	add    BYTE PTR [rax],al
 566:	00 00                	add    BYTE PTR [rax],al
 568:	d8 3d 00 00 00 00    	fdivr  DWORD PTR [rip+0x0]        # 56e <_init-0xa92>
 56e:	00 00                	add    BYTE PTR [rax],al
 570:	08 00                	or     BYTE PTR [rax],al
 572:	00 00                	add    BYTE PTR [rax],al
 574:	00 00                	add    BYTE PTR [rax],al
 576:	00 00                	add    BYTE PTR [rax],al
 578:	f0 10 00             	lock adc BYTE PTR [rax],al
 57b:	00 00                	add    BYTE PTR [rax],al
 57d:	00 00                	add    BYTE PTR [rax],al
 57f:	00 10                	add    BYTE PTR [rax],dl
 581:	40 00 00             	rex add BYTE PTR [rax],al
 584:	00 00                	add    BYTE PTR [rax],al
 586:	00 00                	add    BYTE PTR [rax],al
 588:	08 00                	or     BYTE PTR [rax],al
 58a:	00 00                	add    BYTE PTR [rax],al
 58c:	00 00                	add    BYTE PTR [rax],al
 58e:	00 00                	add    BYTE PTR [rax],al
 590:	10 40 00             	adc    BYTE PTR [rax+0x0],al
 593:	00 00                	add    BYTE PTR [rax],al
 595:	00 00                	add    BYTE PTR [rax],al
 597:	00 c0                	add    al,al
 599:	3f                   	(bad)
 59a:	00 00                	add    BYTE PTR [rax],al
 59c:	00 00                	add    BYTE PTR [rax],al
 59e:	00 00                	add    BYTE PTR [rax],al
 5a0:	06                   	(bad)
 5a1:	00 00                	add    BYTE PTR [rax],al
 5a3:	00 01                	add    BYTE PTR [rcx],al
	...
 5ad:	00 00                	add    BYTE PTR [rax],al
 5af:	00 c8                	add    al,cl
 5b1:	3f                   	(bad)
 5b2:	00 00                	add    BYTE PTR [rax],al
 5b4:	00 00                	add    BYTE PTR [rax],al
 5b6:	00 00                	add    BYTE PTR [rax],al
 5b8:	06                   	(bad)
 5b9:	00 00                	add    BYTE PTR [rax],al
 5bb:	00 02                	add    BYTE PTR [rdx],al
	...
 5c5:	00 00                	add    BYTE PTR [rax],al
 5c7:	00 d0                	add    al,dl
 5c9:	3f                   	(bad)
 5ca:	00 00                	add    BYTE PTR [rax],al
 5cc:	00 00                	add    BYTE PTR [rax],al
 5ce:	00 00                	add    BYTE PTR [rax],al
 5d0:	06                   	(bad)
 5d1:	00 00                	add    BYTE PTR [rax],al
 5d3:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
 5de:	00 00                	add    BYTE PTR [rax],al
 5e0:	d8 3f                	fdivr  DWORD PTR [rdi]
 5e2:	00 00                	add    BYTE PTR [rax],al
 5e4:	00 00                	add    BYTE PTR [rax],al
 5e6:	00 00                	add    BYTE PTR [rax],al
 5e8:	06                   	(bad)
 5e9:	00 00                	add    BYTE PTR [rax],al
 5eb:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5f1 <_init-0xa0f>
 5f1:	00 00                	add    BYTE PTR [rax],al
 5f3:	00 00                	add    BYTE PTR [rax],al
 5f5:	00 00                	add    BYTE PTR [rax],al
 5f7:	00 e0                	add    al,ah
 5f9:	3f                   	(bad)
 5fa:	00 00                	add    BYTE PTR [rax],al
 5fc:	00 00                	add    BYTE PTR [rax],al
 5fe:	00 00                	add    BYTE PTR [rax],al
 600:	06                   	(bad)
 601:	00 00                	add    BYTE PTR [rax],al
 603:	00 06                	add    BYTE PTR [rsi],al
	...

Disassembly of section .rela.plt:

0000000000000610 <.rela.plt>:
 610:	00 40 00             	add    BYTE PTR [rax+0x0],al
 613:	00 00                	add    BYTE PTR [rax],al
 615:	00 00                	add    BYTE PTR [rax],al
 617:	00 07                	add    BYTE PTR [rdi],al
 619:	00 00                	add    BYTE PTR [rax],al
 61b:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    rsp,0x8
    1004:	48 8b 05 c5 2f 00 00 	mov    rax,QWORD PTR [rip+0x2fc5]        # 3fd0 <__gmon_start__@Base>
    100b:	48 85 c0             	test   rax,rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	call   rax
    1012:	48 83 c4 08          	add    rsp,0x8
    1016:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <puts@plt-0x10>:
    1020:	ff 35 ca 2f 00 00    	push   QWORD PTR [rip+0x2fca]        # 3ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 cc 2f 00 00    	jmp    QWORD PTR [rip+0x2fcc]        # 3ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001030 <puts@plt>:
    1030:	ff 25 ca 2f 00 00    	jmp    QWORD PTR [rip+0x2fca]        # 4000 <puts@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

0000000000001040 <__cxa_finalize@plt>:
    1040:	ff 25 9a 2f 00 00    	jmp    QWORD PTR [rip+0x2f9a]        # 3fe0 <__cxa_finalize@GLIBC_2.2.5>
    1046:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000001050 <_start>:
    1050:	31 ed                	xor    ebp,ebp
    1052:	49 89 d1             	mov    r9,rdx
    1055:	5e                   	pop    rsi
    1056:	48 89 e2             	mov    rdx,rsp
    1059:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    105d:	50                   	push   rax
    105e:	54                   	push   rsp
    105f:	45 31 c0             	xor    r8d,r8d
    1062:	31 c9                	xor    ecx,ecx
    1064:	48 8d 3d ce 00 00 00 	lea    rdi,[rip+0xce]        # 1139 <main>
    106b:	ff 15 4f 2f 00 00    	call   QWORD PTR [rip+0x2f4f]        # 3fc0 <__libc_start_main@GLIBC_2.34>
    1071:	f4                   	hlt
    1072:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    1079:	00 00 00 
    107c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001080 <deregister_tm_clones>:
    1080:	48 8d 3d 91 2f 00 00 	lea    rdi,[rip+0x2f91]        # 4018 <__TMC_END__>
    1087:	48 8d 05 8a 2f 00 00 	lea    rax,[rip+0x2f8a]        # 4018 <__TMC_END__>
    108e:	48 39 f8             	cmp    rax,rdi
    1091:	74 15                	je     10a8 <deregister_tm_clones+0x28>
    1093:	48 8b 05 2e 2f 00 00 	mov    rax,QWORD PTR [rip+0x2f2e]        # 3fc8 <_ITM_deregisterTMCloneTable@Base>
    109a:	48 85 c0             	test   rax,rax
    109d:	74 09                	je     10a8 <deregister_tm_clones+0x28>
    109f:	ff e0                	jmp    rax
    10a1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    10a8:	c3                   	ret
    10a9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000010b0 <register_tm_clones>:
    10b0:	48 8d 3d 61 2f 00 00 	lea    rdi,[rip+0x2f61]        # 4018 <__TMC_END__>
    10b7:	48 8d 35 5a 2f 00 00 	lea    rsi,[rip+0x2f5a]        # 4018 <__TMC_END__>
    10be:	48 29 fe             	sub    rsi,rdi
    10c1:	48 89 f0             	mov    rax,rsi
    10c4:	48 c1 ee 3f          	shr    rsi,0x3f
    10c8:	48 c1 f8 03          	sar    rax,0x3
    10cc:	48 01 c6             	add    rsi,rax
    10cf:	48 d1 fe             	sar    rsi,1
    10d2:	74 14                	je     10e8 <register_tm_clones+0x38>
    10d4:	48 8b 05 fd 2e 00 00 	mov    rax,QWORD PTR [rip+0x2efd]        # 3fd8 <_ITM_registerTMCloneTable@Base>
    10db:	48 85 c0             	test   rax,rax
    10de:	74 08                	je     10e8 <register_tm_clones+0x38>
    10e0:	ff e0                	jmp    rax
    10e2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    10e8:	c3                   	ret
    10e9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000010f0 <__do_global_dtors_aux>:
    10f0:	f3 0f 1e fa          	endbr64
    10f4:	80 3d 1d 2f 00 00 00 	cmp    BYTE PTR [rip+0x2f1d],0x0        # 4018 <__TMC_END__>
    10fb:	75 2b                	jne    1128 <__do_global_dtors_aux+0x38>
    10fd:	55                   	push   rbp
    10fe:	48 83 3d da 2e 00 00 	cmp    QWORD PTR [rip+0x2eda],0x0        # 3fe0 <__cxa_finalize@GLIBC_2.2.5>
    1105:	00 
    1106:	48 89 e5             	mov    rbp,rsp
    1109:	74 0c                	je     1117 <__do_global_dtors_aux+0x27>
    110b:	48 8b 3d fe 2e 00 00 	mov    rdi,QWORD PTR [rip+0x2efe]        # 4010 <__dso_handle>
    1112:	e8 29 ff ff ff       	call   1040 <__cxa_finalize@plt>
    1117:	e8 64 ff ff ff       	call   1080 <deregister_tm_clones>
    111c:	c6 05 f5 2e 00 00 01 	mov    BYTE PTR [rip+0x2ef5],0x1        # 4018 <__TMC_END__>
    1123:	5d                   	pop    rbp
    1124:	c3                   	ret
    1125:	0f 1f 00             	nop    DWORD PTR [rax]
    1128:	c3                   	ret
    1129:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001130 <frame_dummy>:
    1130:	f3 0f 1e fa          	endbr64
    1134:	e9 77 ff ff ff       	jmp    10b0 <register_tm_clones>

0000000000001139 <main>:
    1139:	55                   	push   rbp
    113a:	48 89 e5             	mov    rbp,rsp
    113d:	48 8d 05 c0 0e 00 00 	lea    rax,[rip+0xec0]        # 2004 <_IO_stdin_used+0x4>
    1144:	48 89 c7             	mov    rdi,rax
    1147:	e8 e4 fe ff ff       	call   1030 <puts@plt>
    114c:	b8 00 00 00 00       	mov    eax,0x0
    1151:	5d                   	pop    rbp
    1152:	c3                   	ret

Disassembly of section .fini:

0000000000001154 <_fini>:
    1154:	48 83 ec 08          	sub    rsp,0x8
    1158:	48 83 c4 08          	add    rsp,0x8
    115c:	c3                   	ret

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    DWORD PTR [rax],eax
    2002:	02 00                	add    al,BYTE PTR [rax]
    2004:	48                   	rex.W
    2005:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    2007:	6c                   	ins    BYTE PTR es:[rdi],dx
    2008:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2009:	2c 20                	sub    al,0x20
    200b:	57                   	push   rdi
    200c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    200d:	72 6c                	jb     207b <__GNU_EH_FRAME_HDR+0x67>
    200f:	64 21 00             	and    DWORD PTR fs:[rax],eax

Disassembly of section .eh_frame_hdr:

0000000000002014 <__GNU_EH_FRAME_HDR>:
    2014:	01 1b                	add    DWORD PTR [rbx],ebx
    2016:	03 3b                	add    edi,DWORD PTR [rbx]
    2018:	28 00                	sub    BYTE PTR [rax],al
    201a:	00 00                	add    BYTE PTR [rax],al
    201c:	04 00                	add    al,0x0
    201e:	00 00                	add    BYTE PTR [rax],al
    2020:	0c f0                	or     al,0xf0
    2022:	ff                   	(bad)
    2023:	ff 74 00 00          	push   QWORD PTR [rax+rax*1+0x0]
    2027:	00 2c f0             	add    BYTE PTR [rax+rsi*8],ch
    202a:	ff                   	(bad)
    202b:	ff 9c 00 00 00 3c f0 	call   FWORD PTR [rax+rax*1-0xfc40000]
    2032:	ff                   	(bad)
    2033:	ff 44 00 00          	inc    DWORD PTR [rax+rax*1+0x0]
    2037:	00 25 f1 ff ff b4    	add    BYTE PTR [rip+0xffffffffb4fffff1],ah        # ffffffffb500202e <_end+0xffffffffb4ffe00e>
    203d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .eh_frame:

0000000000002040 <__FRAME_END__-0xa8>:
    2040:	14 00                	adc    al,0x0
    2042:	00 00                	add    BYTE PTR [rax],al
    2044:	00 00                	add    BYTE PTR [rax],al
    2046:	00 00                	add    BYTE PTR [rax],al
    2048:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    204b:	00 01                	add    BYTE PTR [rcx],al
    204d:	78 10                	js     205f <__GNU_EH_FRAME_HDR+0x4b>
    204f:	01 1b                	add    DWORD PTR [rbx],ebx
    2051:	0c 07                	or     al,0x7
    2053:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
    2059:	00 00                	add    BYTE PTR [rax],al
    205b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    205e:	00 00                	add    BYTE PTR [rax],al
    2060:	f0 ef                	lock out dx,eax
    2062:	ff                   	(bad)
    2063:	ff 22                	jmp    QWORD PTR [rdx]
	...
    206d:	00 00                	add    BYTE PTR [rax],al
    206f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    2072:	00 00                	add    BYTE PTR [rax],al
    2074:	00 00                	add    BYTE PTR [rax],al
    2076:	00 00                	add    BYTE PTR [rax],al
    2078:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    207b:	00 01                	add    BYTE PTR [rcx],al
    207d:	78 10                	js     208f <__GNU_EH_FRAME_HDR+0x7b>
    207f:	01 1b                	add    DWORD PTR [rbx],ebx
    2081:	0c 07                	or     al,0x7
    2083:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
    2089:	00 00                	add    BYTE PTR [rax],al
    208b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    208e:	00 00                	add    BYTE PTR [rax],al
    2090:	90                   	nop
    2091:	ef                   	out    dx,eax
    2092:	ff                   	(bad)
    2093:	ff 20                	jmp    QWORD PTR [rax]
    2095:	00 00                	add    BYTE PTR [rax],al
    2097:	00 00                	add    BYTE PTR [rax],al
    2099:	0e                   	(bad)
    209a:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    209d:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    20a0:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    20a3:	80 00 3f             	add    BYTE PTR [rax],0x3f
    20a6:	1a 3b                	sbb    bh,BYTE PTR [rbx]
    20a8:	2a 33                	sub    dh,BYTE PTR [rbx]
    20aa:	24 22                	and    al,0x22
    20ac:	00 00                	add    BYTE PTR [rax],al
    20ae:	00 00                	add    BYTE PTR [rax],al
    20b0:	14 00                	adc    al,0x0
    20b2:	00 00                	add    BYTE PTR [rax],al
    20b4:	44 00 00             	add    BYTE PTR [rax],r8b
    20b7:	00 88 ef ff ff 08    	add    BYTE PTR [rax+0x8ffffef],cl
	...
    20c5:	00 00                	add    BYTE PTR [rax],al
    20c7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    20ca:	00 00                	add    BYTE PTR [rax],al
    20cc:	5c                   	pop    rsp
    20cd:	00 00                	add    BYTE PTR [rax],al
    20cf:	00 69 f0             	add    BYTE PTR [rcx-0x10],ch
    20d2:	ff                   	(bad)
    20d3:	ff 1a                	call   FWORD PTR [rdx]
    20d5:	00 00                	add    BYTE PTR [rax],al
    20d7:	00 00                	add    BYTE PTR [rax],al
    20d9:	41 0e                	rex.B (bad)
    20db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    20e1:	55                   	push   rbp
    20e2:	0c 07                	or     al,0x7
    20e4:	08 00                	or     BYTE PTR [rax],al
	...

00000000000020e8 <__FRAME_END__>:
    20e8:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.ABI-tag:

00000000000020ec <__abi_tag>:
    20ec:	04 00                	add    al,0x0
    20ee:	00 00                	add    BYTE PTR [rax],al
    20f0:	10 00                	adc    BYTE PTR [rax],al
    20f2:	00 00                	add    BYTE PTR [rax],al
    20f4:	01 00                	add    DWORD PTR [rax],eax
    20f6:	00 00                	add    BYTE PTR [rax],al
    20f8:	47                   	rex.RXB
    20f9:	4e 55                	rex.WRX push rbp
    20fb:	00 00                	add    BYTE PTR [rax],al
    20fd:	00 00                	add    BYTE PTR [rax],al
    20ff:	00 03                	add    BYTE PTR [rbx],al
    2101:	00 00                	add    BYTE PTR [rax],al
    2103:	00 02                	add    BYTE PTR [rdx],al
    2105:	00 00                	add    BYTE PTR [rax],al
    2107:	00 00                	add    BYTE PTR [rax],al
    2109:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000003dd0 <__frame_dummy_init_array_entry>:
    3dd0:	30 11                	xor    BYTE PTR [rcx],dl
    3dd2:	00 00                	add    BYTE PTR [rax],al
    3dd4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000003dd8 <__do_global_dtors_aux_fini_array_entry>:
    3dd8:	f0 10 00             	lock adc BYTE PTR [rax],al
    3ddb:	00 00                	add    BYTE PTR [rax],al
    3ddd:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000003de0 <_DYNAMIC>:
    3de0:	01 00                	add    DWORD PTR [rax],eax
    3de2:	00 00                	add    BYTE PTR [rax],al
    3de4:	00 00                	add    BYTE PTR [rax],al
    3de6:	00 00                	add    BYTE PTR [rax],al
    3de8:	27                   	(bad)
    3de9:	00 00                	add    BYTE PTR [rax],al
    3deb:	00 00                	add    BYTE PTR [rax],al
    3ded:	00 00                	add    BYTE PTR [rax],al
    3def:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    3df2:	00 00                	add    BYTE PTR [rax],al
    3df4:	00 00                	add    BYTE PTR [rax],al
    3df6:	00 00                	add    BYTE PTR [rax],al
    3df8:	00 10                	add    BYTE PTR [rax],dl
    3dfa:	00 00                	add    BYTE PTR [rax],al
    3dfc:	00 00                	add    BYTE PTR [rax],al
    3dfe:	00 00                	add    BYTE PTR [rax],al
    3e00:	0d 00 00 00 00       	or     eax,0x0
    3e05:	00 00                	add    BYTE PTR [rax],al
    3e07:	00 54 11 00          	add    BYTE PTR [rcx+rdx*1+0x0],dl
    3e0b:	00 00                	add    BYTE PTR [rax],al
    3e0d:	00 00                	add    BYTE PTR [rax],al
    3e0f:	00 19                	add    BYTE PTR [rcx],bl
    3e11:	00 00                	add    BYTE PTR [rax],al
    3e13:	00 00                	add    BYTE PTR [rax],al
    3e15:	00 00                	add    BYTE PTR [rax],al
    3e17:	00 d0                	add    al,dl
    3e19:	3d 00 00 00 00       	cmp    eax,0x0
    3e1e:	00 00                	add    BYTE PTR [rax],al
    3e20:	1b 00                	sbb    eax,DWORD PTR [rax]
    3e22:	00 00                	add    BYTE PTR [rax],al
    3e24:	00 00                	add    BYTE PTR [rax],al
    3e26:	00 00                	add    BYTE PTR [rax],al
    3e28:	08 00                	or     BYTE PTR [rax],al
    3e2a:	00 00                	add    BYTE PTR [rax],al
    3e2c:	00 00                	add    BYTE PTR [rax],al
    3e2e:	00 00                	add    BYTE PTR [rax],al
    3e30:	1a 00                	sbb    al,BYTE PTR [rax]
    3e32:	00 00                	add    BYTE PTR [rax],al
    3e34:	00 00                	add    BYTE PTR [rax],al
    3e36:	00 00                	add    BYTE PTR [rax],al
    3e38:	d8 3d 00 00 00 00    	fdivr  DWORD PTR [rip+0x0]        # 3e3e <_DYNAMIC+0x5e>
    3e3e:	00 00                	add    BYTE PTR [rax],al
    3e40:	1c 00                	sbb    al,0x0
    3e42:	00 00                	add    BYTE PTR [rax],al
    3e44:	00 00                	add    BYTE PTR [rax],al
    3e46:	00 00                	add    BYTE PTR [rax],al
    3e48:	08 00                	or     BYTE PTR [rax],al
    3e4a:	00 00                	add    BYTE PTR [rax],al
    3e4c:	00 00                	add    BYTE PTR [rax],al
    3e4e:	00 00                	add    BYTE PTR [rax],al
    3e50:	f5                   	cmc
    3e51:	fe                   	(bad)
    3e52:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3e55:	00 00                	add    BYTE PTR [rax],al
    3e57:	00 b0 03 00 00 00    	add    BYTE PTR [rax+0x3],dh
    3e5d:	00 00                	add    BYTE PTR [rax],al
    3e5f:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3e65 <_DYNAMIC+0x85>
    3e65:	00 00                	add    BYTE PTR [rax],al
    3e67:	00 80 04 00 00 00    	add    BYTE PTR [rax+0x4],al
    3e6d:	00 00                	add    BYTE PTR [rax],al
    3e6f:	00 06                	add    BYTE PTR [rsi],al
    3e71:	00 00                	add    BYTE PTR [rax],al
    3e73:	00 00                	add    BYTE PTR [rax],al
    3e75:	00 00                	add    BYTE PTR [rax],al
    3e77:	00 d8                	add    al,bl
    3e79:	03 00                	add    eax,DWORD PTR [rax]
    3e7b:	00 00                	add    BYTE PTR [rax],al
    3e7d:	00 00                	add    BYTE PTR [rax],al
    3e7f:	00 0a                	add    BYTE PTR [rdx],cl
    3e81:	00 00                	add    BYTE PTR [rax],al
    3e83:	00 00                	add    BYTE PTR [rax],al
    3e85:	00 00                	add    BYTE PTR [rax],al
    3e87:	00 8d 00 00 00 00    	add    BYTE PTR [rbp+0x0],cl
    3e8d:	00 00                	add    BYTE PTR [rax],al
    3e8f:	00 0b                	add    BYTE PTR [rbx],cl
    3e91:	00 00                	add    BYTE PTR [rax],al
    3e93:	00 00                	add    BYTE PTR [rax],al
    3e95:	00 00                	add    BYTE PTR [rax],al
    3e97:	00 18                	add    BYTE PTR [rax],bl
    3e99:	00 00                	add    BYTE PTR [rax],al
    3e9b:	00 00                	add    BYTE PTR [rax],al
    3e9d:	00 00                	add    BYTE PTR [rax],al
    3e9f:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 3ea5 <_DYNAMIC+0xc5>
	...
    3ead:	00 00                	add    BYTE PTR [rax],al
    3eaf:	00 03                	add    BYTE PTR [rbx],al
    3eb1:	00 00                	add    BYTE PTR [rax],al
    3eb3:	00 00                	add    BYTE PTR [rax],al
    3eb5:	00 00                	add    BYTE PTR [rax],al
    3eb7:	00 e8                	add    al,ch
    3eb9:	3f                   	(bad)
    3eba:	00 00                	add    BYTE PTR [rax],al
    3ebc:	00 00                	add    BYTE PTR [rax],al
    3ebe:	00 00                	add    BYTE PTR [rax],al
    3ec0:	02 00                	add    al,BYTE PTR [rax]
    3ec2:	00 00                	add    BYTE PTR [rax],al
    3ec4:	00 00                	add    BYTE PTR [rax],al
    3ec6:	00 00                	add    BYTE PTR [rax],al
    3ec8:	18 00                	sbb    BYTE PTR [rax],al
    3eca:	00 00                	add    BYTE PTR [rax],al
    3ecc:	00 00                	add    BYTE PTR [rax],al
    3ece:	00 00                	add    BYTE PTR [rax],al
    3ed0:	14 00                	adc    al,0x0
    3ed2:	00 00                	add    BYTE PTR [rax],al
    3ed4:	00 00                	add    BYTE PTR [rax],al
    3ed6:	00 00                	add    BYTE PTR [rax],al
    3ed8:	07                   	(bad)
    3ed9:	00 00                	add    BYTE PTR [rax],al
    3edb:	00 00                	add    BYTE PTR [rax],al
    3edd:	00 00                	add    BYTE PTR [rax],al
    3edf:	00 17                	add    BYTE PTR [rdi],dl
    3ee1:	00 00                	add    BYTE PTR [rax],al
    3ee3:	00 00                	add    BYTE PTR [rax],al
    3ee5:	00 00                	add    BYTE PTR [rax],al
    3ee7:	00 10                	add    BYTE PTR [rax],dl
    3ee9:	06                   	(bad)
    3eea:	00 00                	add    BYTE PTR [rax],al
    3eec:	00 00                	add    BYTE PTR [rax],al
    3eee:	00 00                	add    BYTE PTR [rax],al
    3ef0:	07                   	(bad)
    3ef1:	00 00                	add    BYTE PTR [rax],al
    3ef3:	00 00                	add    BYTE PTR [rax],al
    3ef5:	00 00                	add    BYTE PTR [rax],al
    3ef7:	00 50 05             	add    BYTE PTR [rax+0x5],dl
    3efa:	00 00                	add    BYTE PTR [rax],al
    3efc:	00 00                	add    BYTE PTR [rax],al
    3efe:	00 00                	add    BYTE PTR [rax],al
    3f00:	08 00                	or     BYTE PTR [rax],al
    3f02:	00 00                	add    BYTE PTR [rax],al
    3f04:	00 00                	add    BYTE PTR [rax],al
    3f06:	00 00                	add    BYTE PTR [rax],al
    3f08:	c0 00 00             	rol    BYTE PTR [rax],0x0
    3f0b:	00 00                	add    BYTE PTR [rax],al
    3f0d:	00 00                	add    BYTE PTR [rax],al
    3f0f:	00 09                	add    BYTE PTR [rcx],cl
    3f11:	00 00                	add    BYTE PTR [rax],al
    3f13:	00 00                	add    BYTE PTR [rax],al
    3f15:	00 00                	add    BYTE PTR [rax],al
    3f17:	00 18                	add    BYTE PTR [rax],bl
    3f19:	00 00                	add    BYTE PTR [rax],al
    3f1b:	00 00                	add    BYTE PTR [rax],al
    3f1d:	00 00                	add    BYTE PTR [rax],al
    3f1f:	00 fb                	add    bl,bh
    3f21:	ff                   	(bad)
    3f22:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f25:	00 00                	add    BYTE PTR [rax],al
    3f27:	00 00                	add    BYTE PTR [rax],al
    3f29:	00 00                	add    BYTE PTR [rax],al
    3f2b:	08 00                	or     BYTE PTR [rax],al
    3f2d:	00 00                	add    BYTE PTR [rax],al
    3f2f:	00 fe                	add    dh,bh
    3f31:	ff                   	(bad)
    3f32:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f35:	00 00                	add    BYTE PTR [rax],al
    3f37:	00 20                	add    BYTE PTR [rax],ah
    3f39:	05 00 00 00 00       	add    eax,0x0
    3f3e:	00 00                	add    BYTE PTR [rax],al
    3f40:	ff                   	(bad)
    3f41:	ff                   	(bad)
    3f42:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f45:	00 00                	add    BYTE PTR [rax],al
    3f47:	00 01                	add    BYTE PTR [rcx],al
    3f49:	00 00                	add    BYTE PTR [rax],al
    3f4b:	00 00                	add    BYTE PTR [rax],al
    3f4d:	00 00                	add    BYTE PTR [rax],al
    3f4f:	00 f0                	add    al,dh
    3f51:	ff                   	(bad)
    3f52:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f55:	00 00                	add    BYTE PTR [rax],al
    3f57:	00 0e                	add    BYTE PTR [rsi],cl
    3f59:	05 00 00 00 00       	add    eax,0x0
    3f5e:	00 00                	add    BYTE PTR [rax],al
    3f60:	f9                   	stc
    3f61:	ff                   	(bad)
    3f62:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f65:	00 00                	add    BYTE PTR [rax],al
    3f67:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000003fc0 <.got>:
	...

Disassembly of section .got.plt:

0000000000003fe8 <_GLOBAL_OFFSET_TABLE_>:
    3fe8:	e0 3d                	loopne 4027 <_end+0x7>
	...
    3ffe:	00 00                	add    BYTE PTR [rax],al
    4000:	36 10 00             	ss adc BYTE PTR [rax],al
    4003:	00 00                	add    BYTE PTR [rax],al
    4005:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000004008 <__data_start>:
	...

0000000000004010 <__dso_handle>:
    4010:	10 40 00             	adc    BYTE PTR [rax+0x0],al
    4013:	00 00                	add    BYTE PTR [rax],al
    4015:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 44 65 62          	sub    BYTE PTR [rbp+riz*2+0x62],al
   9:	69 61 6e 20 31 34 2e 	imul   esp,DWORD PTR [rcx+0x6e],0x2e343120
  10:	32 2e                	xor    ch,BYTE PTR [rsi]
  12:	30 2d 31 39 29 20    	xor    BYTE PTR [rip+0x20293931],ch        # 20293949 <_end+0x2028f929>
  18:	31 34 2e             	xor    DWORD PTR [rsi+rbp*1],esi
  1b:	32 2e                	xor    ch,BYTE PTR [rsi]
  1d:	30 00                	xor    BYTE PTR [rax],al
